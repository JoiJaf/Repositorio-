// <auto-generated />
using System;
using ApiHotelesBeach.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiHotelesBeach.Migrations
{
    [DbContext(typeof(DbContextHotel))]
    [Migration("20241119172806_reservaModel")]
    partial class reservaModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiHotelesBeach.Models.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Banco")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaExpiracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreTitular")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FormasPago");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Efectivo",
                            Numero = 0
                        },
                        new
                        {
                            Id = 2,
                            Banco = "Banco Nacional",
                            CVV = "123",
                            FechaExpiracion = "12/25",
                            Nombre = "Tarjeta de Crédito",
                            NombreTitular = "Juan Pérez",
                            Numero = 1010101
                        });
                });

            modelBuilder.Entity("ApiHotelesBeach.Models.Paquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("Mensualidades")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Prima")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.ToTable("Paquetes");
                });

            modelBuilder.Entity("ApiHotelesBeach.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadNoches")
                        .HasColumnType("int");

                    b.Property<int>("CantidadPersonas")
                        .HasColumnType("int");

                    b.Property<string>("ClienteCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoFinal")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("MontoRebajado")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("PagoMes")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Prima")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteCedula");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ApiHotelesBeach.Models.Usuario", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TipoCedula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Cedula");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Cedula = "604880492",
                            Direccion = "Esparza Centro",
                            Email = "ashleycr33@gmail.com",
                            FechaRegistro = new DateTime(2024, 11, 19, 11, 28, 6, 256, DateTimeKind.Local).AddTicks(8498),
                            IsAdmin = true,
                            NombreCompleto = "Ashley Rojas Pérez",
                            Password = "ashley12345",
                            Telefono = "85272939",
                            TipoCedula = "FISICA"
                        });
                });

            modelBuilder.Entity("ApiHotelesBeach.Models.Reserva", b =>
                {
                    b.HasOne("ApiHotelesBeach.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("ClienteCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiHotelesBeach.Models.FormaPago", "FormaPago")
                        .WithMany()
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiHotelesBeach.Models.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormaPago");

                    b.Navigation("Paquete");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
